{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mando\\\\Desktop\\\\projet9\\\\Debuggez-une-application-React.JS\\\\src\\\\containers\\\\Slider\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useData } from \"../../contexts/DataContext\";\nimport { getMonth } from \"../../helpers/Date\";\nimport \"./style.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Slider = () => {\n  _s();\n\n  const {\n    data\n  } = useData();\n  const [index, setIndex] = useState(0); // Trier les événements de la date la plus ancienne à la plus récente\n\n  const byDateAsc = useMemo(() => {\n    var _data$focus;\n\n    return data !== null && data !== void 0 && (_data$focus = data.focus) !== null && _data$focus !== void 0 && _data$focus.length ? [...data.focus].sort((evtA, evtB) => new Date(evtA.date) > new Date(evtB.date) ? 1 : -1) : [];\n  }, [data]);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setIndex(prevIndex => prevIndex < byDateAsc.length - 1 ? prevIndex + 1 : 0);\n    }, 5000);\n    return () => clearInterval(interval);\n  }, [byDateAsc.length]);\n  if (!byDateAsc.length) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"SlideCardList\",\n    children: [byDateAsc === null || byDateAsc === void 0 ? void 0 : byDateAsc.map((event, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `SlideCard SlideCard--${index === idx ? \"display\" : \"hide\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: event.cover,\n        alt: event.title,\n        onError: e => {\n          e.target.src = 'path_to_placeholder_image';\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"SlideCard__descriptionContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"SlideCard__description\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: event.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: event.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: getMonth(new Date(event.date))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)]\n    }, event.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SlideCard__paginationContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"SlideCard__pagination\",\n        children: byDateAsc === null || byDateAsc === void 0 ? void 0 : byDateAsc.map((_, radioIdx) => /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"radio-button\",\n          checked: index === radioIdx,\n          onChange: () => setIndex(radioIdx),\n          readOnly: true\n        }, `pagination-${radioIdx}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Slider, \"r2x8hkPMdunV4EFaTCUPcDluaj4=\", false, function () {\n  return [useData];\n});\n\n_c = Slider;\nexport default Slider;\n\nvar _c;\n\n$RefreshReg$(_c, \"Slider\");","map":{"version":3,"sources":["C:/Users/mando/Desktop/projet9/Debuggez-une-application-React.JS/src/containers/Slider/index.js"],"names":["useEffect","useState","useData","getMonth","Slider","data","index","setIndex","byDateAsc","useMemo","focus","length","sort","evtA","evtB","Date","date","interval","setInterval","prevIndex","clearInterval","map","event","idx","cover","title","e","target","src","description","id","_","radioIdx"],"mappings":"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","sourcesContent":["import { useEffect, useState,  } from \"react\";\r\nimport { useData } from \"../../contexts/DataContext\";\r\nimport { getMonth } from \"../../helpers/Date\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Slider = () => {\r\n  const { data } = useData();\r\n  const [index, setIndex] = useState(0);\r\n\r\n  // Trier les événements de la date la plus ancienne à la plus récente\r\n  const byDateAsc = useMemo(() => {\r\n    return data?.focus?.length ? [...data.focus].sort((evtA, evtB) =>\r\n      new Date(evtA.date) > new Date(evtB.date) ? 1 : -1\r\n    ) : [];\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setIndex((prevIndex) => (prevIndex < byDateAsc.length - 1 ? prevIndex + 1 : 0));\r\n    }, 5000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [byDateAsc.length]);\r\n\r\n  if (!byDateAsc.length) return null;\r\n  \r\n  return (\r\n    <div className=\"SlideCardList\">\r\n      {byDateAsc?.map((event, idx) => (\r\n        <div\r\n          key={event.id}\r\n          className={`SlideCard SlideCard--${index === idx ? \"display\" : \"hide\"}`}\r\n        >\r\n          <img src={event.cover} alt={event.title} onError={(e) => { e.target.src = 'path_to_placeholder_image'; }} />\r\n          <div className=\"SlideCard__descriptionContainer\">\r\n            <div className=\"SlideCard__description\">\r\n              <h3>{event.title}</h3>\r\n              <p>{event.description}</p>\r\n              <div>{getMonth(new Date(event.date))}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n      <div className=\"SlideCard__paginationContainer\">\r\n        <div className=\"SlideCard__pagination\">\r\n          {byDateAsc?.map((_, radioIdx) => (\r\n            <input\r\n              key={`pagination-${radioIdx}`}\r\n              type=\"radio\"\r\n              name=\"radio-button\"\r\n              checked={index === radioIdx}\r\n              onChange={() => setIndex(radioIdx)}\r\n              readOnly\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Slider;\r\n"]},"metadata":{},"sourceType":"module"}