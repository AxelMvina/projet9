{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mando\\\\Desktop\\\\projet9\\\\Debuggez-une-application-React.JS\\\\src\\\\containers\\\\Events\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport EventCard from \"../../components/EventCard\";\nimport Select from \"../../components/Select\";\nimport { useData } from \"../../contexts/DataContext\";\nimport Modal from \"../Modal\";\nimport ModalEvent from \"../ModalEvent\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PER_PAGE = 9;\n\nconst EventList = () => {\n  _s();\n\n  var _data$events;\n\n  const {\n    data,\n    error\n  } = useData();\n  const [type, setType] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1); // Dépendances pour les événements filtrés\n\n  useEffect(() => {\n    setCurrentPage(1); // Réinitialise la page lorsque le type change\n  }, [type]); // Filtrage des événements selon le type sélectionné\n\n  const filteredEvents = ((data === null || data === void 0 ? void 0 : data.events) || []).filter(event => !type || event.type === type).slice((currentPage - 1) * PER_PAGE, currentPage * PER_PAGE); // Calcul du nombre total de pages\n\n  const pageNumber = Math.ceil(((data === null || data === void 0 ? void 0 : (_data$events = data.events) === null || _data$events === void 0 ? void 0 : _data$events.filter(event => !type || event.type === type).length) || 0) / PER_PAGE); // Liste des types d'événements\n\n  const typeList = new Set(data === null || data === void 0 ? void 0 : data.events.map(event => event.type));\n\n  const changeType = evtType => {\n    setType(evtType);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"An error occurred\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this), !data ? \"loading\" : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"SelectTitle\",\n        children: \"Cat\\xE9gories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        selection: Array.from(typeList),\n        onChange: value => changeType(value || null)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"events\",\n        className: \"ListContainer\",\n        children: filteredEvents.map(event => /*#__PURE__*/_jsxDEV(Modal, {\n          Content: /*#__PURE__*/_jsxDEV(ModalEvent, {\n            event: event\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 46\n          }, this),\n          children: _ref => {\n            let {\n              setIsOpened\n            } = _ref;\n            return /*#__PURE__*/_jsxDEV(EventCard, {\n              onClick: () => setIsOpened(true),\n              imageSrc: event.cover,\n              title: event.title,\n              date: new Date(event.date),\n              label: event.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 19\n            }, this);\n          }\n        }, event.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Pagination\",\n        children: [...Array(pageNumber)].map((_, n) =>\n        /*#__PURE__*/\n        // eslint-disable-next-line react/no-array-index-key\n        _jsxDEV(\"a\", {\n          href: \"#events\",\n          onClick: () => setCurrentPage(n + 1),\n          children: n + 1\n        }, n, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n\n_s(EventList, \"OVvqHLbCk7xAHvMqZMDuPeDt83Q=\", false, function () {\n  return [useData];\n});\n\n_c = EventList;\nexport default EventList;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventList\");","map":{"version":3,"sources":["C:/Users/mando/Desktop/projet9/Debuggez-une-application-React.JS/src/containers/Events/index.js"],"names":["useState","useEffect","EventCard","Select","useData","Modal","ModalEvent","PER_PAGE","EventList","data","error","type","setType","currentPage","setCurrentPage","filteredEvents","events","filter","event","slice","pageNumber","Math","ceil","length","typeList","Set","map","changeType","evtType","Array","from","value","setIsOpened","cover","title","Date","date","id","_","n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,OAAT,QAAwB,4BAAxB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AAEA,OAAO,aAAP;;;AAEA,MAAMC,QAAQ,GAAG,CAAjB;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAAA;;AACtB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBN,OAAO,EAA/B;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACa,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAAC,CAAD,CAA9C,CAHsB,CAKtB;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,cAAc,CAAC,CAAD,CAAd,CADc,CACK;AACpB,GAFQ,EAEN,CAACH,IAAD,CAFM,CAAT,CANsB,CAUtB;;AACA,QAAMI,cAAc,GAAG,CAAC,CAAAN,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEO,MAAN,KAAgB,EAAjB,EACpBC,MADoB,CACbC,KAAK,IAAI,CAACP,IAAD,IAASO,KAAK,CAACP,IAAN,KAAeA,IADpB,EAEpBQ,KAFoB,CAEd,CAACN,WAAW,GAAG,CAAf,IAAoBN,QAFN,EAEgBM,WAAW,GAAGN,QAF9B,CAAvB,CAXsB,CAetB;;AACA,QAAMa,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAU,CAAC,CAAAb,IAAI,SAAJ,IAAAA,IAAI,WAAJ,4BAAAA,IAAI,CAAEO,MAAN,8DAAcC,MAAd,CAAqBC,KAAK,IAAI,CAACP,IAAD,IAASO,KAAK,CAACP,IAAN,KAAeA,IAAtD,EAA4DY,MAA5D,KAAsE,CAAvE,IAA4EhB,QAAtF,CAAnB,CAhBsB,CAkBtB;;AACA,QAAMiB,QAAQ,GAAG,IAAIC,GAAJ,CAAQhB,IAAR,aAAQA,IAAR,uBAAQA,IAAI,CAAEO,MAAN,CAAaU,GAAb,CAAiBR,KAAK,IAAIA,KAAK,CAACP,IAAhC,CAAR,CAAjB;;AAEA,QAAMgB,UAAU,GAAIC,OAAD,IAAa;AAC9BhB,IAAAA,OAAO,CAACgB,OAAD,CAAP;AACD,GAFD;;AAIA,sBACE;AAAA,eACGlB,KAAK,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADZ,EAEG,CAACD,IAAD,GACC,SADD,gBAGC;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AACE,QAAA,SAAS,EAAEoB,KAAK,CAACC,IAAN,CAAWN,QAAX,CADb;AAEE,QAAA,QAAQ,EAAGO,KAAD,IAAWJ,UAAU,CAACI,KAAK,IAAI,IAAV;AAFjC;AAAA;AAAA;AAAA;AAAA,cAFF,eAME;AAAK,QAAA,EAAE,EAAC,QAAR;AAAiB,QAAA,SAAS,EAAC,eAA3B;AAAA,kBACGhB,cAAc,CAACW,GAAf,CAAoBR,KAAD,iBAClB,QAAC,KAAD;AAAsB,UAAA,OAAO,eAAE,QAAC,UAAD;AAAY,YAAA,KAAK,EAAEA;AAAnB;AAAA;AAAA;AAAA;AAAA,kBAA/B;AAAA,oBACG;AAAA,gBAAC;AAAEc,cAAAA;AAAF,aAAD;AAAA,gCACC,QAAC,SAAD;AACE,cAAA,OAAO,EAAE,MAAMA,WAAW,CAAC,IAAD,CAD5B;AAEE,cAAA,QAAQ,EAAEd,KAAK,CAACe,KAFlB;AAGE,cAAA,KAAK,EAAEf,KAAK,CAACgB,KAHf;AAIE,cAAA,IAAI,EAAE,IAAIC,IAAJ,CAASjB,KAAK,CAACkB,IAAf,CAJR;AAKE,cAAA,KAAK,EAAElB,KAAK,CAACP;AALf;AAAA;AAAA;AAAA;AAAA,oBADD;AAAA;AADH,WAAYO,KAAK,CAACmB,EAAlB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cANF,eAqBE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,kBACG,CAAC,GAAGR,KAAK,CAACT,UAAD,CAAT,EAAuBM,GAAvB,CAA2B,CAACY,CAAD,EAAIC,CAAJ;AAAA;AAC1B;AACA;AAAW,UAAA,IAAI,EAAC,SAAhB;AAA0B,UAAA,OAAO,EAAE,MAAMzB,cAAc,CAACyB,CAAC,GAAG,CAAL,CAAvD;AAAA,oBACGA,CAAC,GAAG;AADP,WAAQA,CAAR;AAAA;AAAA;AAAA;AAAA,gBAFD;AADH;AAAA;AAAA;AAAA;AAAA,cArBF;AAAA,oBALJ;AAAA,kBADF;AAuCD,CAhED;;GAAM/B,S;UACoBJ,O;;;KADpBI,S;AAkEN,eAAeA,SAAf","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport EventCard from \"../../components/EventCard\";\r\nimport Select from \"../../components/Select\";\r\nimport { useData } from \"../../contexts/DataContext\";\r\nimport Modal from \"../Modal\";\r\nimport ModalEvent from \"../ModalEvent\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst PER_PAGE = 9;\r\n\r\nconst EventList = () => {\r\n  const { data, error } = useData();\r\n  const [type, setType] = useState(null);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  \r\n  // Dépendances pour les événements filtrés\r\n  useEffect(() => {\r\n    setCurrentPage(1); // Réinitialise la page lorsque le type change\r\n  }, [type]);\r\n\r\n  // Filtrage des événements selon le type sélectionné\r\n  const filteredEvents = (data?.events || [])\r\n    .filter(event => !type || event.type === type)\r\n    .slice((currentPage - 1) * PER_PAGE, currentPage * PER_PAGE);\r\n\r\n  // Calcul du nombre total de pages\r\n  const pageNumber = Math.ceil((data?.events?.filter(event => !type || event.type === type).length || 0) / PER_PAGE);\r\n\r\n  // Liste des types d'événements\r\n  const typeList = new Set(data?.events.map(event => event.type));\r\n\r\n  const changeType = (evtType) => {\r\n    setType(evtType);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {error && <div>An error occurred</div>}\r\n      {!data ? (\r\n        \"loading\"\r\n      ) : (\r\n        <>\r\n          <h3 className=\"SelectTitle\">Catégories</h3>\r\n          <Select\r\n            selection={Array.from(typeList)}\r\n            onChange={(value) => changeType(value || null)}\r\n          />\r\n          <div id=\"events\" className=\"ListContainer\">\r\n            {filteredEvents.map((event) => (\r\n              <Modal key={event.id} Content={<ModalEvent event={event} />}>\r\n                {({ setIsOpened }) => (\r\n                  <EventCard\r\n                    onClick={() => setIsOpened(true)}\r\n                    imageSrc={event.cover}\r\n                    title={event.title}\r\n                    date={new Date(event.date)}\r\n                    label={event.type}\r\n                  />\r\n                )}\r\n              </Modal>\r\n            ))}\r\n          </div>\r\n          <div className=\"Pagination\">\r\n            {[...Array(pageNumber)].map((_, n) => (\r\n              // eslint-disable-next-line react/no-array-index-key\r\n              <a key={n} href=\"#events\" onClick={() => setCurrentPage(n + 1)}>\r\n                {n + 1}\r\n              </a>\r\n            ))}\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EventList;\r\n"]},"metadata":{},"sourceType":"module"}