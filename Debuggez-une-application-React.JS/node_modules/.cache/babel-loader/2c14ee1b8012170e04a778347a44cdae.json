{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mando\\\\Desktop\\\\projet9\\\\Debuggez-une-application-React.JS\\\\src\\\\containers\\\\Form\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Field, { FIELD_TYPES } from \"../../components/Field\";\nimport Select from \"../../components/Select\";\nimport Button, { BUTTON_TYPES } from \"../../components/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mockContactApi = () => new Promise(resolve => {\n  setTimeout(resolve, 500);\n});\n\nconst Form = _ref => {\n  _s();\n\n  let {\n    onSuccess,\n    onError\n  } = _ref;\n  const [sending, setSending] = useState(false);\n  const [message, setMessage] = useState(null);\n  const sendContact = useCallback(async evt => {\n    evt.preventDefault();\n    setSending(true);\n    setMessage(null); // Reset the message on new submission\n\n    try {\n      await mockContactApi();\n      setSending(false);\n      setMessage(\"Votre message a été envoyé avec succès !\");\n      onSuccess();\n    } catch (err) {\n      setSending(false);\n      setMessage(\"Une erreur s'est produite lors de l'envoi de votre message.\");\n      onError(err);\n    }\n  }, [onSuccess, onError]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: sendContact,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          placeholder: \"\",\n          label: \"Nom\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          placeholder: \"\",\n          label: \"Pr\\xE9nom\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          selection: [\"Personel\", \"Entreprise\"],\n          onChange: () => null,\n          label: \"Personel / Entreprise\",\n          type: \"large\",\n          titleEmpty: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          placeholder: \"\",\n          label: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: BUTTON_TYPES.SUBMIT,\n          disabled: sending,\n          children: sending ? \"En cours\" : \"Envoyer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: /*#__PURE__*/_jsxDEV(Field, {\n          placeholder: \"message\",\n          label: \"Message\",\n          type: FIELD_TYPES.TEXTAREA\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Form, \"NzNoUM/z0v2YU9Wm6c57XeG9JR4=\");\n\n_c = Form;\nForm.propTypes = {\n  onError: PropTypes.func,\n  onSuccess: PropTypes.func\n};\nForm.defaultProps = {\n  onError: () => null,\n  onSuccess: () => null\n};\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["C:/Users/mando/Desktop/projet9/Debuggez-une-application-React.JS/src/containers/Form/index.js"],"names":["useCallback","useState","PropTypes","Field","FIELD_TYPES","Select","Button","BUTTON_TYPES","mockContactApi","Promise","resolve","setTimeout","Form","onSuccess","onError","sending","setSending","message","setMessage","sendContact","evt","preventDefault","err","SUBMIT","TEXTAREA","propTypes","func","defaultProps"],"mappings":"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","sourcesContent":["import { useCallback, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Field, { FIELD_TYPES } from \"../../components/Field\";\r\nimport Select from \"../../components/Select\";\r\nimport Button, { BUTTON_TYPES } from \"../../components/Button\";\r\n\r\nconst mockContactApi = () => new Promise((resolve) => { setTimeout(resolve, 500); })\r\n\r\nconst Form = ({ onSuccess, onError }) => {\r\n  const [sending, setSending] = useState(false);\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const sendContact = useCallback(\r\n    async (evt) => {\r\n      evt.preventDefault();\r\n      setSending(true);\r\n      setMessage(null);  // Reset the message on new submission\r\n      try {\r\n        await mockContactApi();\r\n        setSending(false);\r\n        setMessage(\"Votre message a été envoyé avec succès !\");\r\n        onSuccess();\r\n      } catch (err) {\r\n        setSending(false);\r\n        setMessage(\"Une erreur s'est produite lors de l'envoi de votre message.\");\r\n        onError(err);\r\n      }\r\n    },\r\n    [onSuccess, onError]\r\n  );\r\n\r\n  return (\r\n    <form onSubmit={sendContact}>\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <Field placeholder=\"\" label=\"Nom\" />\r\n          <Field placeholder=\"\" label=\"Prénom\" />\r\n          <Select\r\n            selection={[\"Personel\", \"Entreprise\"]}\r\n            onChange={() => null}\r\n            label=\"Personel / Entreprise\"\r\n            type=\"large\"\r\n            titleEmpty\r\n          />\r\n          <Field placeholder=\"\" label=\"Email\" />\r\n          <Button type={BUTTON_TYPES.SUBMIT} disabled={sending}>\r\n            {sending ? \"En cours\" : \"Envoyer\"}\r\n          </Button>\r\n        </div>\r\n        <div className=\"col\">\r\n          <Field\r\n            placeholder=\"message\"\r\n            label=\"Message\"\r\n            type={FIELD_TYPES.TEXTAREA}\r\n          />\r\n        </div>\r\n      </div>\r\n      \r\n    </form>\r\n  );\r\n};\r\n\r\nForm.propTypes = {\r\n  onError: PropTypes.func,\r\n  onSuccess: PropTypes.func,\r\n}\r\n\r\nForm.defaultProps = {\r\n  onError: () => null,\r\n  onSuccess: () => null,\r\n}\r\n\r\nexport default Form;\r\n"]},"metadata":{},"sourceType":"module"}