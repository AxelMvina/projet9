{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mando\\\\Desktop\\\\projet9\\\\Debuggez-une-application-React.JS\\\\src\\\\containers\\\\Events\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport EventCard from \"../../components/EventCard\";\nimport Select from \"../../components/Select\";\nimport { useData } from \"../../contexts/DataContext\";\nimport Modal from \"../Modal\";\nimport ModalEvent from \"../ModalEvent\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PER_PAGE = 9;\n\nconst EventList = () => {\n  _s();\n\n  const {\n    data,\n    error\n  } = useData();\n  const [type, setType] = useState(null); // Assurez-vous que le type est initialisé correctement\n\n  const [currentPage, setCurrentPage] = useState(1); // Filtrage des événements\n\n  const filteredEvents = ((data === null || data === void 0 ? void 0 : data.events) || []).filter(event => !type || event.type === type).slice((currentPage - 1) * PER_PAGE, currentPage * PER_PAGE); // Calcul du nombre total de pages\n\n  const totalFilteredEvents = ((data === null || data === void 0 ? void 0 : data.events) || []).filter(event => !type || event.type === type).length;\n  const pageNumber = Math.ceil(totalFilteredEvents / PER_PAGE); // Liste des types d'événements\n\n  const typeList = Array.from(new Set(data === null || data === void 0 ? void 0 : data.events.map(event => event.type)));\n\n  const changeType = evtType => {\n    setType(evtType);\n    setCurrentPage(1); // Réinitialise la page lorsque le type change\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"An error occurred\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this), !data ? \"loading\" : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"SelectTitle\",\n        children: \"Cat\\xE9gories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        selection: typeList,\n        onChange: value => changeType(value || null)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"events\",\n        className: \"ListContainer\",\n        children: filteredEvents.map(event => /*#__PURE__*/_jsxDEV(Modal, {\n          Content: /*#__PURE__*/_jsxDEV(ModalEvent, {\n            event: event\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 46\n          }, this),\n          children: _ref => {\n            let {\n              setIsOpened\n            } = _ref;\n            return /*#__PURE__*/_jsxDEV(EventCard, {\n              onClick: () => setIsOpened(true),\n              imageSrc: event.cover,\n              title: event.title,\n              date: new Date(event.date),\n              label: event.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 19\n            }, this);\n          }\n        }, event.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Pagination\",\n        children: [...Array(pageNumber)].map((_, n) => /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#events\",\n          onClick: e => {\n            e.preventDefault(); // Empêche le comportement par défaut de l'ancre\n\n            setCurrentPage(n + 1);\n          },\n          className: currentPage === n + 1 ? 'active' : '',\n          children: n + 1\n        }, n, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n\n_s(EventList, \"53abh5PcW2g/+k4RjTRJmUZKMtw=\", false, function () {\n  return [useData];\n});\n\n_c = EventList;\nexport default EventList;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventList\");","map":{"version":3,"sources":["C:/Users/mando/Desktop/projet9/Debuggez-une-application-React.JS/src/containers/Events/index.js"],"names":["useState","EventCard","Select","useData","Modal","ModalEvent","PER_PAGE","EventList","data","error","type","setType","currentPage","setCurrentPage","filteredEvents","events","filter","event","slice","totalFilteredEvents","length","pageNumber","Math","ceil","typeList","Array","from","Set","map","changeType","evtType","value","setIsOpened","cover","title","Date","date","id","_","n","e","preventDefault"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\r\nimport EventCard from \"../../components/EventCard\";\r\nimport Select from \"../../components/Select\";\r\nimport { useData } from \"../../contexts/DataContext\";\r\nimport Modal from \"../Modal\";\r\nimport ModalEvent from \"../ModalEvent\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst PER_PAGE = 9;\r\n\r\nconst EventList = () => {\r\n  const { data, error } = useData();\r\n  const [type, setType] = useState(null); // Assurez-vous que le type est initialisé correctement\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  // Filtrage des événements\r\n  const filteredEvents = (data?.events || [])\r\n    .filter(event => !type || event.type === type)\r\n    .slice((currentPage - 1) * PER_PAGE, currentPage * PER_PAGE);\r\n\r\n  // Calcul du nombre total de pages\r\n  const totalFilteredEvents = (data?.events || [])\r\n    .filter(event => !type || event.type === type).length;\r\n  const pageNumber = Math.ceil(totalFilteredEvents / PER_PAGE);\r\n\r\n  // Liste des types d'événements\r\n  const typeList = Array.from(new Set(data?.events.map(event => event.type)));\r\n\r\n  const changeType = (evtType) => {\r\n    setType(evtType);\r\n    setCurrentPage(1); // Réinitialise la page lorsque le type change\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {error && <div>An error occurred</div>}\r\n      {!data ? (\r\n        \"loading\"\r\n      ) : (\r\n        <>\r\n          <h3 className=\"SelectTitle\">Catégories</h3>\r\n          <Select\r\n            selection={typeList}\r\n            onChange={(value) => changeType(value || null)}\r\n          />\r\n          <div id=\"events\" className=\"ListContainer\">\r\n            {filteredEvents.map((event) => (\r\n              <Modal key={event.id} Content={<ModalEvent event={event} />}>\r\n                {({ setIsOpened }) => (\r\n                  <EventCard\r\n                    onClick={() => setIsOpened(true)}\r\n                    imageSrc={event.cover}\r\n                    title={event.title}\r\n                    date={new Date(event.date)}\r\n                    label={event.type}\r\n                  />\r\n                )}\r\n              </Modal>\r\n            ))}\r\n          </div>\r\n          <div className=\"Pagination\">\r\n            {[...Array(pageNumber)].map((_, n) => (\r\n              <a\r\n                key={n}\r\n                href=\"#events\"\r\n                onClick={(e) => {\r\n                  e.preventDefault(); // Empêche le comportement par défaut de l'ancre\r\n                  setCurrentPage(n + 1);\r\n                }}\r\n                className={currentPage === n + 1 ? 'active' : ''}\r\n              >\r\n                {n + 1}\r\n              </a>\r\n            ))}\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EventList;\r\n"]},"metadata":{},"sourceType":"module"}