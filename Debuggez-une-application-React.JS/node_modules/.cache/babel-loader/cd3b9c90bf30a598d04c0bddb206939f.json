{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mando\\\\Desktop\\\\projet9\\\\Debuggez-une-application-React.JS\\\\src\\\\contexts\\\\DataContext\\\\index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport PropTypes from \"prop-types\";\nimport { createContext, useCallback, useContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataContext = /*#__PURE__*/createContext({});\nexport const api = {\n  loadData: async () => {\n    try {\n      const response = await fetch(\"/events.json\");\n      const json = await response.json();\n      console.log(\"Données récupérées :\", json); // Debugging line\n\n      return json;\n    } catch (error) {\n      console.error(\"Erreur lors du chargement des données :\", error); // Debugging line\n\n      return {\n        events: [],\n        focus: []\n      };\n    }\n  }\n};\nexport const DataProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [error, setError] = useState(null);\n  const [data, setData] = useState(null);\n  const [lastEvent, setLastEvent] = useState(null);\n  const getData = useCallback(async () => {\n    try {\n      const fetchedData = await api.loadData();\n      setData(fetchedData);\n\n      if (fetchedData.events && fetchedData.events.length > 0) {\n        const mostRecentEvent = fetchedData.events.reduce((latest, event) => {\n          const eventDate = new Date(event.date);\n          return eventDate > new Date(latest.date) ? event : latest;\n        }, fetchedData.events[0]);\n        setLastEvent(mostRecentEvent); // le dernier événement par date\n\n        console.log(\"Dernier événement défini :\", mostRecentEvent); // Debugging line\n      }\n    } catch (err) {\n      console.error(\"Erreur lors de la récupération des données :\", err); // Debugging line\n\n      setError(err);\n    }\n  }, []);\n  useEffect(() => {\n    if (!data) {\n      getData();\n    }\n  }, [data, getData]);\n  return /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n    value: {\n      data,\n      lastEvent,\n      error\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DataProvider, \"Q661jcoc5bmdPWBDoO1s2syFPts=\");\n\n_c = DataProvider;\nDataProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport const useData = () => {\n  _s2();\n\n  return useContext(DataContext);\n};\n\n_s2(useData, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport default DataContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataProvider\");","map":{"version":3,"sources":["C:/Users/mando/Desktop/projet9/Debuggez-une-application-React.JS/src/contexts/DataContext/index.js"],"names":["PropTypes","createContext","useCallback","useContext","useEffect","useState","DataContext","api","loadData","response","fetch","json","console","log","error","events","focus","DataProvider","children","setError","data","setData","lastEvent","setLastEvent","getData","fetchedData","length","mostRecentEvent","reduce","latest","event","eventDate","Date","date","err","propTypes","node","isRequired","useData"],"mappings":"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","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport {\r\n  createContext,\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useState,\r\n} from \"react\";\r\n\r\nconst DataContext = createContext({});\r\n\r\nexport const api = {\r\n  loadData: async () => {\r\n    try {\r\n      const response = await fetch(\"/events.json\");\r\n      const json = await response.json();\r\n      console.log(\"Données récupérées :\", json); // Debugging line\r\n      return json;\r\n    } catch (error) {\r\n      console.error(\"Erreur lors du chargement des données :\", error); // Debugging line\r\n      return { events: [], focus: [] };\r\n    }\r\n  },\r\n};\r\n\r\nexport const DataProvider = ({ children }) => {\r\n  const [error, setError] = useState(null);\r\n  const [data, setData] = useState(null);\r\n  const [lastEvent, setLastEvent] = useState(null);\r\n\r\n  const getData = useCallback(async () => {\r\n    try {\r\n      const fetchedData = await api.loadData();\r\n      setData(fetchedData);\r\n      if (fetchedData.events && fetchedData.events.length > 0) {\r\n        const mostRecentEvent = fetchedData.events.reduce((latest, event) => {\r\n          const eventDate = new Date(event.date);\r\n          return eventDate > new Date(latest.date) ? event : latest;\r\n        }, fetchedData.events[0]);\r\n        setLastEvent(mostRecentEvent); // le dernier événement par date\r\n        console.log(\"Dernier événement défini :\", mostRecentEvent); // Debugging line\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Erreur lors de la récupération des données :\", err); // Debugging line\r\n      setError(err);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!data) {\r\n      getData();\r\n    }\r\n  }, [data, getData]);\r\n\r\n  return (\r\n    <DataContext.Provider\r\n      value={{\r\n        data,\r\n        lastEvent,\r\n        error,\r\n      }}\r\n    >\r\n      {children}\r\n    </DataContext.Provider>\r\n  );\r\n};\r\n\r\nDataProvider.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport const useData = () => useContext(DataContext);\r\n\r\nexport default DataContext;\r\n"]},"metadata":{},"sourceType":"module"}